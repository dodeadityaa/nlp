
        pibutton = QPushButton('summarization', self)
        pibutton.clicked.connect(self.summarization)
        pibutton.resize(131, 41)
        pibutton.move(1030, 660)





    def summarization(self):
        def tf(word, blob):
            return blob.words.count(word) / len(blob.words)

        def n_containing(word, bloblist):
            return sum(1 for blob in bloblist if word in blob)

        def idf(word, bloblist):
            return math.log(len(bloblist) / (1 + n_containing(word, bloblist)))

        def tfidf(word, blob, bloblist):
            return tf(word, blob) * idf(word, bloblist)

        document1 = tb(self.lineEdit.text())

        bloblist = [document1]
        for i, blob in enumerate(bloblist):
            print("Top words in document {}".format(i + 1))
            scores = {word: tfidf(word, blob, bloblist) for word in blob.words}
            sorted_words = sorted(scores.items(), key=lambda x: x[1], reverse=True)
            for word, score in sorted_words[:3]:
                self.summarization.setText("Word: {}, TF-IDF: {}".format(word, round(score, 5)))
                print("Word: {}, TF-IDF: {}".format(word, round(score, 5)))